// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

model customer {
  id         Int      @id @default(autoincrement())
  name       String   @db.VarChar(255)
  phone      String   @db.VarChar(30)
  address    String   @db.VarChar(255)
  lat_long   String   @db.VarChar(255)
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  orders     orders[]
}

model truck {
  id         Int         @id @default(autoincrement())
  name       String      @db.VarChar(255)
  capacity   Int
  vehicle_no String      @db.VarChar(30)
  created_at DateTime    @default(now())
  updated_at DateTime    @default(now())
  shipments  shipments[]
}

model product {
  id           Int             @id @default(autoincrement())
  name         String          @db.VarChar(255)
  weight       Float
  price        Int
  created_at   DateTime        @default(now())
  updated_at   DateTime        @default(now())
  orderDetails order_details[]
}

model orders {
  id               Int                @id @default(autoincrement())
  customer_id      Int
  customer         customer           @relation(fields: [customer_id], references: [id])
  grand_total      Int
  total_weight     Int
  order_date       DateTime           @default(now())
  created_at       DateTime           @default(now())
  updated_at       DateTime           @default(now())
  order_details    order_details[]
  shipment_details shipment_details[]
}

model order_details {
  id         Int      @id @default(autoincrement())
  order_id   Int
  order      orders   @relation(fields: [order_id], references: [id])
  product_id Int
  product    product  @relation(fields: [product_id], references: [id])
  qty        Int
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
}

model shipments {
  id Int @id @default(autoincrement())

  truck_id         Int
  truck            truck              @relation(fields: [truck_id], references: [id])
  status           String             @db.VarChar(50)
  shipment_date    DateTime           @default(now())
  created_at       DateTime           @default(now())
  updated_at       DateTime           @default(now())
  shipment_details shipment_details[]
}

model shipment_details {
  id                            Int       @id @default(autoincrement())
  shipment_id                   Int
  shipment                      shipments @relation(fields: [shipment_id], references: [id])
  order_id                      Int
  order                         orders    @relation(fields: [order_id], references: [id])
  distance_from_store           Float?
  distance_from_previous_origin Float?
  total_weight                  Float
  sequence                      Int
  status                        String    @db.VarChar(50)
  created_at                    DateTime  @default(now())
  updated_at                    DateTime  @default(now())
}

model roles {
  id Int @id @default(autoincrement())

  name       String   @db.VarChar(50)
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  users      users[]
}

model users {
  id Int @id @default(autoincrement())

  role_id    Int
  role       roles    @relation(fields: [role_id], references: [id])
  username   String   @unique
  password   String
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
